name: Regression Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  regression-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          alsa-utils \
          portaudio19-dev \
          sox \
          linux-modules-extra-$(uname -r)
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyserial pyaudio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Load ALSA loopback module
      run: |
        sudo modprobe snd-aloop
        # Verify module loaded
        lsmod | grep snd_aloop
        # List audio devices
        aplay -l
    
    - name: Run regression test
      run: |
        chmod +x ./ci_regression_test.sh
        ./ci_regression_test.sh
      env:
        CI: true
        GITHUB_ACTIONS: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          logs/*.log
          logs/*.xml
    
    - name: Publish test results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Regression Test Results (Python ${{ matrix.python-version }})
        path: logs/test_results.xml
        reporter: java-junit
        fail-on-error: false
    
# - name: Create issue on failure
#   if: failure()
#   uses: actions/github-script@v6
#   with:
#     script: |
#       const issue = await github.rest.issues.create({
#         owner: context.repo.owner,
#         repo: context.repo.repo,
#         title: `Regression test failed on ${context.sha.substring(0, 7)}`,
#         body: `The regression test failed on commit ${context.sha}.
#         
#         **Python Version:** ${{ matrix.python-version }}
#         **Branch:** ${context.ref}
#         **Run:** ${context.runNumber}
#         
#         Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`,
#         labels: ['bug', 'ci-failure']
#       });
#       console.log(`Created issue #${issue.data.number}`);
